{"version":3,"sources":["src/app/pages/character-details/character-details.page.html","src/app/pages/character-details/character-details-routing.module.ts","src/app/pages/character-details/character-details.module.ts","src/app/pages/character-details/character-details.page.scss","src/app/pages/character-details/character-details.page.ts","src/app/services/character-reaction.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n\\t<!-- Toolbar theme -->\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<!-- Back navigation to characters page-->\\n\\t\\t<ion-buttons slot=\\\"start\\\" defaultHref=\\\"/tabs/characters\\\">\\n\\t\\t\\t<ion-back-button></ion-back-button>\\n\\t\\t</ion-buttons>\\n\\t\\t<!-- Loading the name of the character in the title -->\\n\\t\\t<ion-title> {{ character?.name }}</ion-title>\\n\\n\\t\\t<!-- Like and dislike button bar -->\\n\\t\\t<ion-buttons slot=\\\"end\\\">\\n\\t\\t\\t<ion-button (click)=\\\"neutreCharacter()\\\" *ngIf=\\\"isLiked\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"thumbs-up\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t\\t<ion-button (click)=\\\"likeCharacter()\\\" *ngIf=\\\"!isLiked\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"thumbs-up-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t\\t<ion-button (click)=\\\"neutreCharacter()\\\" *ngIf=\\\"isDisliked\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"thumbs-down\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t\\t<ion-button (click)=\\\"dislikeCharacter()\\\" *ngIf=\\\"!isDisliked\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"thumbs-down-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-buttons>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<!-- Details of the selected character -->\\n\\t<ion-card *ngIf=\\\"character\\\">\\n        <ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<img src={{character.img}} alt={{character.name}} width=\\\"10%\\\" height=\\\"10%\\\"/>\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b>Id:</b> {{ character.char_id }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b>Name:</b> {{ character.name }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b>Birthday:</b> {{ character.birthday }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b> Occupation: </b> {{ character.occupation }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b>Status:</b> {{ character.status }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b>Appearance:</b> {{ character.appearance }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b>Portrayed:</b> {{ character.portrayed }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t\\n\\t</ion-card>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharacterDetailsPage } from './character-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharacterDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CharacterDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharacterDetailsPageRoutingModule } from './character-details-routing.module';\n\nimport { CharacterDetailsPage } from './character-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CharacterDetailsPageRoutingModule\n  ],\n  declarations: [CharacterDetailsPage]\n})\nexport class CharacterDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJhY3Rlci1kZXRhaWxzL2NoYXJhY3Rlci1kZXRhaWxzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from './../../services/api.service';\nimport { CharacterReactionService } from './../../services/character-reaction.service';\n\n@Component({\n    selector: 'app-character-details',\n    templateUrl: './character-details.page.html',\n    styleUrls: ['./character-details.page.scss'],\n})\n\nexport class CharacterDetailsPage implements OnInit {\n   \n    character: any;\n    characterId = null;\n    isLiked = false;\n    isDisliked = false;\n\n    constructor(private activatedRoute: ActivatedRoute, private api: ApiService, private reactionService: CharacterReactionService) { }\n    \n    ngOnInit() {\n        //get te id of the character\n        this.characterId = this.activatedRoute.snapshot.paramMap.get('id');\n\n        //get and set up the information of the character\n        this.api.getCharacter(this.characterId).subscribe(res => {\n            this.character = res[0];\n        });\n        //initialize variables used to store the like/dislike/neutral state\n        this.reactionService.isLiked(this.characterId).then(liked => {\n            this.isLiked = liked;\n        });\n        this.reactionService.isDisliked(this.characterId).then(disliked => {\n            this.isDisliked = disliked;\n        });\n    }\n\n    //Function used for like a character\n    likeCharacter() {\n        // After calling the funcion likeCharacter from reaction service, \n        // it updates the variables of states of the buttons like and dislike \n        this.reactionService.likeCharacter(this.characterId).then(() => {\n            this.isLiked = true;\n            this.isDisliked = false;\n        });\n    }\n\n    //Function used for dislike a character\n    dislikeCharacter() {\n        // After calling the funcion dislikeCharacter from reaction service, \n        // it updates the variables os states of the buttons like and dislike\n        this.reactionService.dislikeCharacter(this.characterId).then(() => {\n            this.isLiked = false;\n            this.isDisliked = true;\n        });\n    }\n\n    //This function is called when a characted is unlike or undisliked\n    neutreCharacter() {\n        // After calling the funcion neutreCharacter from reaction service, \n        // it updates the variables os states of the buttons like and dislike\n        this.reactionService.neutreCharacter(this.characterId);\n        this.isLiked = false;\n        this.isDisliked = false;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n//Constants that will store the liked and disliked characters keys\nconst LIKE_KEY = 'likedCharacters';\nconst DISLIKE_KEY = 'dislikedCharacters';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterReactionService {\n\n  constructor(private storage: Storage) { }\n\n    //It return all the liked characters\n    getLikedCharacters() {\n        console.log(\"getLikedCharacters\");\n        console.log(JSON.stringify(this.storage.get(LIKE_KEY)));\n        return this.storage.get(LIKE_KEY);\n    }\n\n    //It return all the disliked characters\n    getDislikedCharacters() {\n        console.log(\"getDislikedCharacters\");\n        console.log(JSON.stringify(this.storage.get(DISLIKE_KEY)));\n        return this.storage.get(DISLIKE_KEY);\n    }\n\n\n    //It verifies if a characterId is the liked list\n    isLiked(characterId) {\n        return this.getLikedCharacters().then(result => {\n            console.log(\"isLiked\");\n            console.log(JSON.stringify(result.indexOf(characterId)));\n            return result && result.indexOf(characterId) !== -1;\n        });\n    }\n\n    //It verifies if a characterId is the disliked list\n    isDisliked(characterId) {\n        return this.getDislikedCharacters().then(result => {\n            console.log(\"isDisliked\");\n            console.log(JSON.stringify(result.indexOf(characterId)));\n            return result && result.indexOf(characterId) !== -1;\n        });\n    }\n\n    //It likes a character - adds it to the liked list \n    likeCharacter(characterId) {\n        //For making sure it is not going to be in both list at the same time,\n        //the function removeFromDislikedCharacter is used\n        this.removeFromDislikedCharacter(characterId);\n        console.log(\"likeCharacter\");\n        //It gets all the liked characters\n        return this.getLikedCharacters().then(result => {\n            if (result) {\n                //If the result is true, it means that there is an existent liked list already\n                //The characterId is add to result\n                result.push(characterId);\n                //It is saved\n                this.storage.set(LIKE_KEY, result);\n                return true;\n            } else {\n                //If the result is false, it means that there is no liked list yet\n                //The characterId is saved in the liked list\n                this.storage.set(LIKE_KEY, [characterId]);\n                return true;\n            }\n        });\n    }\n\n    //It dilikes a character - adds it to the disliked list \n    dislikeCharacter(characterId) {\n        //For making sure it is not going to be in both list at the same time,\n        //the function removeFromLikedCharacter is used\n        this.removeFromLikedCharacter(characterId);\n        //It gets all the disliked characters\n        return this.getDislikedCharacters().then(result => {\n            if (result) {\n                //If the result is true, it means that there is an existent disliked list already\n                //The characterId is add to result\n                result.push(characterId);\n                //It is saved\n                this.storage.set(DISLIKE_KEY, result);\n            } else {\n                //If the result is false, it means that there is no dislike list yet\n                //The characterId is saved in disliked the list\n                this.storage.set(DISLIKE_KEY, [characterId]);\n                return true;\n            }\n        });\n    }\n\n    //When a character is liked or disliked it will be removed from both lists\n    neutreCharacter(characterId) {\n        this.removeFromDislikedCharacter(characterId);\n        this.removeFromLikedCharacter(characterId);\n    }\n\n    //It removes a characterId from the liked list\n    removeFromLikedCharacter(characterId) {\n        return this.getLikedCharacters().then(result => {\n            //It verifies if the given characterId is in the liked list and removes it\n            if (result &&  result.indexOf(characterId) !== -1) {   \n                var index = result.indexOf(characterId);\n                result.splice(index, 1);\n                return this.storage.set(LIKE_KEY, result);\n            }\n        });\n    }\n\n    //It removes a characterId from the disliked list\n    removeFromDislikedCharacter(characterId) {\n        return this.getDislikedCharacters().then(result => {\n            console.log(JSON.stringify(result.indexOf(characterId)));\n            //It verifies if the given characterId is in the disliked list and removes it\n            if (result && result.indexOf(characterId) !== -1) {\n                var index = result.indexOf(characterId);\n                result.splice(index, 1);\n                return this.storage.set(DISLIKE_KEY, result);\n            }\n        });\n    }\n}\n\n"],"sourceRoot":"webpack:///","file":"character-details-character-details-module-es5.js"}