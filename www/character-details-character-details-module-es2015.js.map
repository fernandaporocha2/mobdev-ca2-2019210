{"version":3,"sources":["./src/app/pages/character-details/character-details.page.html","./src/app/pages/character-details/character-details-routing.module.ts","./src/app/pages/character-details/character-details.module.ts","./src/app/pages/character-details/character-details.page.scss","./src/app/pages/character-details/character-details.page.ts","./src/app/services/character-reaction.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,4YAA6U,mBAAmB,o8BAAo8B,eAAe,OAAO,gBAAgB,4IAA4I,qBAAqB,+GAA+G,kBAAkB,mHAAmH,sBAAsB,uHAAuH,wBAAwB,iHAAiH,oBAAoB,qHAAqH,wBAAwB,oHAAoH,uBAAuB,kF;;;;;;;;;;;;;;;;;;;ACAvwE;AACc;AAES;AAEhE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAoB;KAChC;CACF,CAAC;AAMF,IAAa,iCAAiC,GAA9C,MAAa,iCAAiC;CAAG;AAApC,iCAAiC;IAJ7C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,iCAAiC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBL;AACM;AACF;AAEA;AAE0C;AAEvB;AAWhE,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;CAAG;AAA7B,0BAA0B;IATtC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,mGAAiC;SAClC;QACD,YAAY,EAAE,CAAC,4EAAoB,CAAC;KACrC,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;ACnBvC;AAAe,6GAA8C,2K;;;;;;;;;;;;;;;;;;;;ACAX;AACD;AACS;AAC6B;AAQvF,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAO7B,YAAoB,cAA8B,EAAU,GAAe,EAAU,eAAyC;QAA1G,mBAAc,GAAd,cAAc,CAAgB;QAAU,QAAG,GAAH,GAAG,CAAY;QAAU,oBAAe,GAAf,eAAe,CAA0B;QAJ9H,gBAAW,GAAG,IAAI,CAAC;QACnB,YAAO,GAAG,KAAK,CAAC;QAChB,eAAU,GAAG,KAAK,CAAC;IAE+G,CAAC;IAEnI,QAAQ;QACJ,4BAA4B;QAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEnE,iDAAiD;QACjD,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,mEAAmE;QACnE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC9D,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAoC;IACpC,aAAa;QACT,kEAAkE;QAClE,sEAAsE;QACtE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAuC;IACvC,gBAAgB;QACZ,qEAAqE;QACrE,qEAAqE;QACrE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YAC9D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kEAAkE;IAClE,eAAe;QACX,oEAAoE;QACpE,qEAAqE;QACrE,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;CAEJ;;YAhDuC,8DAAc;YAAe,gEAAU;YAA2B,6FAAwB;;AAPrH,oBAAoB;IANhC,+DAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;QACjC,mPAA4C;;KAE/C,CAAC;2EASsC,8DAAc,EAAe,gEAAU,EAA2B,6FAAwB;GAPrH,oBAAoB,CAuDhC;AAvDgC;;;;;;;;;;;;;;;;;;;ACXU;AACF;AAEzC,kEAAkE;AAClE,MAAM,QAAQ,GAAG,iBAAiB,CAAC;AACnC,MAAM,WAAW,GAAG,oBAAoB,CAAC;AAKzC,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAEnC,YAAoB,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;IAAI,CAAC;IAEvC,oCAAoC;IACpC,kBAAkB;QACd,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,uCAAuC;IACvC,qBAAqB;QACjB,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAGD,gDAAgD;IAChD,OAAO,CAAC,WAAW;QACf,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACzD,OAAO,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAmD;IACnD,UAAU,CAAC,WAAW;QAClB,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACzD,OAAO,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAmD;IACnD,aAAa,CAAC,WAAW;QACrB,sEAAsE;QACtE,kDAAkD;QAClD,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,kCAAkC;QAClC,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC3C,IAAI,MAAM,EAAE;gBACR,8EAA8E;gBAC9E,kCAAkC;gBAClC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACzB,aAAa;gBACb,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;gBACnC,OAAO,IAAI,CAAC;aACf;iBAAM;gBACH,kEAAkE;gBAClE,4CAA4C;gBAC5C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC1C,OAAO,IAAI,CAAC;aACf;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wDAAwD;IACxD,gBAAgB,CAAC,WAAW;QACxB,sEAAsE;QACtE,+CAA+C;QAC/C,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,CAAC;QAC3C,qCAAqC;QACrC,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC9C,IAAI,MAAM,EAAE;gBACR,iFAAiF;gBACjF,kCAAkC;gBAClC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACzB,aAAa;gBACb,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;aACzC;iBAAM;gBACH,oEAAoE;gBACpE,+CAA+C;gBAC/C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC7C,OAAO,IAAI,CAAC;aACf;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0EAA0E;IAC1E,eAAe,CAAC,WAAW;QACvB,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,CAAC;IAC/C,CAAC;IAED,8CAA8C;IAC9C,wBAAwB,CAAC,WAAW;QAChC,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC3C,0EAA0E;YAC1E,IAAI,MAAM,IAAK,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC/C,IAAI,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBACxC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACxB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;aAC7C;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iDAAiD;IACjD,2BAA2B,CAAC,WAAW;QACnC,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACzD,6EAA6E;YAC7E,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC9C,IAAI,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBACxC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACxB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;aAChD;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;;YA/G8B,sDAAO;;AAFzB,wBAAwB;IAHpC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAG6B,sDAAO;GAFzB,wBAAwB,CAiHpC;AAjHoC","file":"character-details-character-details-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<!-- Toolbar theme -->\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<!-- Back navigation to characters page-->\\n\\t\\t<ion-buttons slot=\\\"start\\\" defaultHref=\\\"/tabs/characters\\\">\\n\\t\\t\\t<ion-back-button></ion-back-button>\\n\\t\\t</ion-buttons>\\n\\t\\t<!-- Loading the name of the character in the title -->\\n\\t\\t<ion-title> {{ character?.name }}</ion-title>\\n\\n\\t\\t<!-- Like and dislike button bar -->\\n\\t\\t<ion-buttons slot=\\\"end\\\">\\n\\t\\t\\t<ion-button (click)=\\\"neutreCharacter()\\\" *ngIf=\\\"isLiked\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"thumbs-up\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t\\t<ion-button (click)=\\\"likeCharacter()\\\" *ngIf=\\\"!isLiked\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"thumbs-up-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t\\t<ion-button (click)=\\\"neutreCharacter()\\\" *ngIf=\\\"isDisliked\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"thumbs-down\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t\\t<ion-button (click)=\\\"dislikeCharacter()\\\" *ngIf=\\\"!isDisliked\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"thumbs-down-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-buttons>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<!-- Details of the selected character -->\\n\\t<ion-card *ngIf=\\\"character\\\">\\n        <ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<img src={{character.img}} alt={{character.name}} width=\\\"10%\\\" height=\\\"10%\\\"/>\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b>Id:</b> {{ character.char_id }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b>Name:</b> {{ character.name }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b>Birthday:</b> {{ character.birthday }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b> Occupation: </b> {{ character.occupation }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b>Status:</b> {{ character.status }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b>Appearance:</b> {{ character.appearance }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t<ion-card>\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t<b>Portrayed:</b> {{ character.portrayed }}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t\\t\\n\\t</ion-card>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharacterDetailsPage } from './character-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharacterDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CharacterDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharacterDetailsPageRoutingModule } from './character-details-routing.module';\n\nimport { CharacterDetailsPage } from './character-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CharacterDetailsPageRoutingModule\n  ],\n  declarations: [CharacterDetailsPage]\n})\nexport class CharacterDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJhY3Rlci1kZXRhaWxzL2NoYXJhY3Rlci1kZXRhaWxzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from './../../services/api.service';\nimport { CharacterReactionService } from './../../services/character-reaction.service';\n\n@Component({\n    selector: 'app-character-details',\n    templateUrl: './character-details.page.html',\n    styleUrls: ['./character-details.page.scss'],\n})\n\nexport class CharacterDetailsPage implements OnInit {\n   \n    character: any;\n    characterId = null;\n    isLiked = false;\n    isDisliked = false;\n\n    constructor(private activatedRoute: ActivatedRoute, private api: ApiService, private reactionService: CharacterReactionService) { }\n    \n    ngOnInit() {\n        //get te id of the character\n        this.characterId = this.activatedRoute.snapshot.paramMap.get('id');\n\n        //get and set up the information of the character\n        this.api.getCharacter(this.characterId).subscribe(res => {\n            this.character = res[0];\n        });\n        //initialize variables used to store the like/dislike/neutral state\n        this.reactionService.isLiked(this.characterId).then(liked => {\n            this.isLiked = liked;\n        });\n        this.reactionService.isDisliked(this.characterId).then(disliked => {\n            this.isDisliked = disliked;\n        });\n    }\n\n    //Function used for like a character\n    likeCharacter() {\n        // After calling the funcion likeCharacter from reaction service, \n        // it updates the variables of states of the buttons like and dislike \n        this.reactionService.likeCharacter(this.characterId).then(() => {\n            this.isLiked = true;\n            this.isDisliked = false;\n        });\n    }\n\n    //Function used for dislike a character\n    dislikeCharacter() {\n        // After calling the funcion dislikeCharacter from reaction service, \n        // it updates the variables os states of the buttons like and dislike\n        this.reactionService.dislikeCharacter(this.characterId).then(() => {\n            this.isLiked = false;\n            this.isDisliked = true;\n        });\n    }\n\n    //This function is called when a characted is unlike or undisliked\n    neutreCharacter() {\n        // After calling the funcion neutreCharacter from reaction service, \n        // it updates the variables os states of the buttons like and dislike\n        this.reactionService.neutreCharacter(this.characterId);\n        this.isLiked = false;\n        this.isDisliked = false;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n//Constants that will store the liked and disliked characters keys\nconst LIKE_KEY = 'likedCharacters';\nconst DISLIKE_KEY = 'dislikedCharacters';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterReactionService {\n\n  constructor(private storage: Storage) { }\n\n    //It return all the liked characters\n    getLikedCharacters() {\n        console.log(\"getLikedCharacters\");\n        console.log(JSON.stringify(this.storage.get(LIKE_KEY)));\n        return this.storage.get(LIKE_KEY);\n    }\n\n    //It return all the disliked characters\n    getDislikedCharacters() {\n        console.log(\"getDislikedCharacters\");\n        console.log(JSON.stringify(this.storage.get(DISLIKE_KEY)));\n        return this.storage.get(DISLIKE_KEY);\n    }\n\n\n    //It verifies if a characterId is the liked list\n    isLiked(characterId) {\n        return this.getLikedCharacters().then(result => {\n            console.log(\"isLiked\");\n            console.log(JSON.stringify(result.indexOf(characterId)));\n            return result && result.indexOf(characterId) !== -1;\n        });\n    }\n\n    //It verifies if a characterId is the disliked list\n    isDisliked(characterId) {\n        return this.getDislikedCharacters().then(result => {\n            console.log(\"isDisliked\");\n            console.log(JSON.stringify(result.indexOf(characterId)));\n            return result && result.indexOf(characterId) !== -1;\n        });\n    }\n\n    //It likes a character - adds it to the liked list \n    likeCharacter(characterId) {\n        //For making sure it is not going to be in both list at the same time,\n        //the function removeFromDislikedCharacter is used\n        this.removeFromDislikedCharacter(characterId);\n        console.log(\"likeCharacter\");\n        //It gets all the liked characters\n        return this.getLikedCharacters().then(result => {\n            if (result) {\n                //If the result is true, it means that there is an existent liked list already\n                //The characterId is add to result\n                result.push(characterId);\n                //It is saved\n                this.storage.set(LIKE_KEY, result);\n                return true;\n            } else {\n                //If the result is false, it means that there is no liked list yet\n                //The characterId is saved in the liked list\n                this.storage.set(LIKE_KEY, [characterId]);\n                return true;\n            }\n        });\n    }\n\n    //It dilikes a character - adds it to the disliked list \n    dislikeCharacter(characterId) {\n        //For making sure it is not going to be in both list at the same time,\n        //the function removeFromLikedCharacter is used\n        this.removeFromLikedCharacter(characterId);\n        //It gets all the disliked characters\n        return this.getDislikedCharacters().then(result => {\n            if (result) {\n                //If the result is true, it means that there is an existent disliked list already\n                //The characterId is add to result\n                result.push(characterId);\n                //It is saved\n                this.storage.set(DISLIKE_KEY, result);\n            } else {\n                //If the result is false, it means that there is no dislike list yet\n                //The characterId is saved in disliked the list\n                this.storage.set(DISLIKE_KEY, [characterId]);\n                return true;\n            }\n        });\n    }\n\n    //When a character is liked or disliked it will be removed from both lists\n    neutreCharacter(characterId) {\n        this.removeFromDislikedCharacter(characterId);\n        this.removeFromLikedCharacter(characterId);\n    }\n\n    //It removes a characterId from the liked list\n    removeFromLikedCharacter(characterId) {\n        return this.getLikedCharacters().then(result => {\n            //It verifies if the given characterId is in the liked list and removes it\n            if (result &&  result.indexOf(characterId) !== -1) {   \n                var index = result.indexOf(characterId);\n                result.splice(index, 1);\n                return this.storage.set(LIKE_KEY, result);\n            }\n        });\n    }\n\n    //It removes a characterId from the disliked list\n    removeFromDislikedCharacter(characterId) {\n        return this.getDislikedCharacters().then(result => {\n            console.log(JSON.stringify(result.indexOf(characterId)));\n            //It verifies if the given characterId is in the disliked list and removes it\n            if (result && result.indexOf(characterId) !== -1) {\n                var index = result.indexOf(characterId);\n                result.splice(index, 1);\n                return this.storage.set(DISLIKE_KEY, result);\n            }\n        });\n    }\n}\n\n"],"sourceRoot":"webpack:///"}